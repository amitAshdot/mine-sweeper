{"version":3,"sources":["store/board/types.js","store/board/actions.js","store/game/types.js","store/game/actions.js","components/buttons/MineButton.js","components/board/Board.js","components/buttons/GameBtn.js","components/game/Settings.js","components/screen/Failed.js","App.js","serviceWorker.js","store/board/reducer.js","store/game/reducer.js","index.js"],"names":["boardTypes","BUILD","CLICKED","RIGHT_CLICKED","REDUCE_MINE_LEFT","INCREASE_MINE_LEFT","CHECK_CELL","RESET","EMPTY","TIME","CHANGE_LEVEL","CHANGE_SIZE","RESTART_GAME","PAUSE","FAILED","FINISH","cellClicked","cellId","res","split","type","action","cellRightClick","reduceMineLeft","increaseMineLeft","recCheckCell","mat","checkCell","id","row","parseInt","col","tempMat","value","mark","open","error","payload","buildBoard","size","lvl","amountOfMines","matrix","mineLeft","i","j","mine","randomLine","Math","floor","random","randomCol","checkAndSetCloseToMine","length","console","log","gameTypes","resetSettings","loading","MineButton","props","board","useSelector","state","dispatch","useDispatch","cell","className","aria-hidden","style","color","useState","longpress","start","setstate","onMouseDown","e","window","event","tempStart","Date","getTime","onMouseLeave","onMouseUp","preventDefault","which","test","screen","availWidth","disabled","onTouchStart","onTouchCancel","onTouchEnd","Board","useEffect","notFinish","map","finish","boardTemplate","key","clicked","rightClicked","GameBtn","onClick","onclick","text","Settings","settings","setting","clearInterval","pause","time","parseFloat","toFixed","pauseFlag","Failed","App","gameOn","page","success","fail","checkPage","CircularProgress","isLoading","Boolean","location","hostname","match","initialState","boardReducer","tempBoard","collumn","tempCell","filter","obj","tempDoubleBoard","rowRIGHT","collumnRIGHT","tempCellRIGHT","newTime","reTime","failed","finished","restart","rootReducer","combineReducers","gameReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.55086675.chunk.js","sourcesContent":["export const boardTypes = {\n    //BOARD\n    BUILD: 'BUILD',\n    CLICKED: 'CLICKED',\n    RIGHT_CLICKED: \"RIGHT_CLICKED\",\n    REDUCE_MINE_LEFT: 'REDUCE_MINE_LEFT',\n    INCREASE_MINE_LEFT: 'INCREASE_MINE_LEFT',\n    CHECK_CELL: 'CHECK_CELL',\n    RESET: 'RESET',\n    EMPTY: 'EMPTY',\n\n    //GAME\n    TIME: 'TIME',\n    CHANGE_LEVEL: 'CHANGE_LEVEL',\n    CHANGE_SIZE: \"CHANGE_SIZE\",\n    RESTART_GAME: \"RESTART_GAME\",\n    PAUSE: 'PAUSE',\n    FAILED: 'FAILED',\n    FINISH: 'FINISH'\n};\n\n","import { boardTypes } from './types';\n\n//------------------GENERAL CELL ACTIONS------------------------\nexport const cellClicked = (cellId) => {\n    const res = cellId.split(\"|\");\n\n    return {\n        type: boardTypes.CLICKED,\n        action: res\n    };\n};\nexport const cellRightClick = (cellId) => {\n    const res = cellId.split(\"|\");\n\n    return {\n        type: boardTypes.RIGHT_CLICKED,\n        action: res\n    }\n};\nexport const reduceMineLeft = () => {\n    return {\n        type: boardTypes.REDUCE_MINE_LEFT,\n\n    };\n};\nexport const increaseMineLeft = () => {\n    return {\n        type: boardTypes.INCREASE_MINE_LEFT,\n\n    };\n};\n\nexport const markCell = () => {\n    return {\n        type: boardTypes.DECREASE,\n    };\n};\n\nconst recCheckCell = (cellId, mat) => {\n    checkCell(cellId.id, mat)\n}\nexport const checkCell = (cellId, mat) => {\n    const res = cellId.split(\"|\");\n    const row = parseInt(res[0]), col = parseInt(res[1])\n    let tempMat = mat;\n    if (mat[res[0]][res[1]].value === 0 && mat[res[0]][res[1]].mark !== 1) {\n        try {\n            if (!tempMat[row - 1][col].open && tempMat[row - 1][col].mark !== 1) { // UP\n                tempMat[row - 1][col].open = true\n                if (tempMat[row - 1][col].value === 0) {\n                    recCheckCell(tempMat[row - 1][col], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row + 1][col].open && tempMat[row + 1][col].mark !== 1) { // DOWN\n                tempMat[row + 1][col].open = true\n                if (tempMat[row + 1][col].value === 0) {\n                    recCheckCell(tempMat[row + 1][col], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row][col - 1].open && tempMat[row][col - 1].mark !== 1) { //LEFT\n                tempMat[row][col - 1].open = true\n                if (tempMat[row][col - 1].value === 0) {\n                    recCheckCell(tempMat[row][col - 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row][col + 1].open && tempMat[row][col + 1].mark !== 1) { //RIGHT\n                tempMat[row][col + 1].open = true\n                if (tempMat[row][col + 1].value === 0) {\n                    recCheckCell(tempMat[row][col + 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row - 1][col - 1].open && tempMat[row - 1][col - 1].mark !== 1) { //UP LEFT\n                tempMat[row - 1][col - 1].open = true\n                if (tempMat[row - 1][col - 1].value === 0) {\n                    recCheckCell(tempMat[row - 1][col - 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row - 1][col + 1].open && tempMat[row - 1][col + 1].mark !== 1) { //UP RIGHT\n                tempMat[row - 1][col + 1].open = true\n                if (tempMat[row - 1][col + 1].value === 0) {\n                    recCheckCell(tempMat[row - 1][col + 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row + 1][col + 1].open && tempMat[row + 1][col + 1].mark !== 1) { //DOWN RIGHT\n                tempMat[row + 1][col + 1].open = true\n                if (tempMat[row + 1][col + 1].value === 0) {\n                    recCheckCell(tempMat[row + 1][col + 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row + 1][col - 1].open && tempMat[row + 1][col - 1].mark !== 1) { //DOWN LEFT\n                tempMat[row + 1][col - 1].open = true\n                if (tempMat[row + 1][col - 1].value === 0) {\n                    recCheckCell(tempMat[row + 1][col - 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n    }\n\n    else if (mat[res[0]][res[1]].value >= 15 && mat[res[0]][res[1]].mark !== 1) {\n        debugger\n        return {\n            type: boardTypes.FAILED,\n        };\n    }\n\n    return {\n        type: boardTypes.CHECK_CELL,\n        payload: tempMat\n    };\n};\n\n//------------------BUILD------------------------\nexport const buildBoard = (size, lvl) => {\n    //lvl = easy : 20% mines , medium : 50% , hard :80%\n    // size = 9x9 , 5x5 , 12x12 , 20x20\n    const amountOfMines = lvl === 1 ? 0.05 * size * size : lvl === 2 ? 0.5 * size * size : 0.8 * size * size\n    let matrix = [], mineLeft = amountOfMines;\n\n    for (let i = 0; i < size; i++) {\n        matrix[i] = [];\n        for (let j = 0; j < size; j++) {\n            matrix[i][j] = { id: `${i}|${j}`, mine: false, open: false, value: 0, mark: 0 };\n        }\n    }\n    while (!(mineLeft <= 1)) {\n        let randomLine = Math.floor(Math.random() * size), randomCol = Math.floor(Math.random() * size)\n        if (!matrix[randomLine][randomCol].mine) { //if the cell is mine - find a new cell\n            matrix[randomLine][randomCol] = { id: `${randomLine}|${randomCol}`, mine: true, open: false, value: 15, mark: 0 };\n            mineLeft--\n        }\n    }\n\n    checkAndSetCloseToMine(matrix, size)\n    return {\n        type: boardTypes.BUILD,\n        action: matrix,\n        amountOfMines,\n    };\n};\n\nconst checkAndSetCloseToMine = (mat, size) => {\n    for (let i = 0; i < size; i++) {\n        for (let j = 0; j < size; j++) {\n            try {\n                if (mat[i][j].mine) {//incase mine detect\n                    if (i === 0) { // if first row\n                        if (j === 0) { // top left corner\n                            mat[i][j + 1].value += 1;\n                            mat[i + 1][j].value += 1;\n                            mat[i + 1][j + 1].value += 1;\n                        }\n                        else if (j === mat.length - 1) { // top right corner\n                            mat[i][j - 1].value += 1\n                            mat[i + 1][j].value += 1\n                            mat[i + 1][j - 1].value += 1\n                        }\n                        else {\n                            mat[i][j - 1].value += 1\n                            mat[i][j + 1].value += 1\n                            mat[i + 1][j].value += 1\n                            mat[i + 1][j - 1].value += 1\n                            mat[i + 1][j + 1].value += 1\n                        }\n                    }\n                    else if (i === mat.length - 1) { // if last row\n                        if (j === 0) { // buttom left corner\n                            mat[i][j + 1].value += 1;\n                            mat[i - 1][j].value += 1;\n                            mat[i - 1][j + 1].value += 1;\n                        }\n                        else if (j === mat.length - 1) {\n                            mat[i][j - 1].value += 1; // add 1 value to near by cell\n                            mat[i - 1][j].value += 1;\n                            mat[i - 1][j - 1].value += 1;\n                        }\n                        else {\n                            mat[i][j - 1].value += 1;\n                            mat[i][j + 1].value += 1;\n                            mat[i - 1][j].value += 1;\n                            mat[i - 1][j - 1].value += 1;\n                            mat[i - 1][j + 1].value += 1;\n                        }\n                    }\n                    else if (j === 0) { // left column\n                        mat[i - 1][j].value += 1\n                        mat[i + 1][j].value += 1\n                        mat[i][j + 1].value += 1\n                        mat[i - 1][j + 1].value += 1\n                        mat[i + 1][j + 1].value += 1\n                    }\n                    else if (j === mat.length - 1) { //right column\n                        mat[i - 1][j].value += 1\n                        mat[i + 1][j].value += 1\n                        mat[i][j - 1].value += 1\n                        mat[i - 1][j - 1].value += 1\n                        mat[i + 1][j - 1].value += 1\n                    }// middle matrix\n                    else {\n                        mat[i - 1][j + 1].value += 1\n                        mat[i - 1][j].value += 1\n                        mat[i - 1][j - 1].value += 1\n                        mat[i + 1][j + 1].value += 1\n                        mat[i + 1][j].value += 1\n                        mat[i + 1][j - 1].value += 1\n                        mat[i][j + 1].value += 1\n                        mat[i][j - 1].value += 1\n                    }\n                }\n            } catch (error) {\n                console.log(error, `row: ${i} , col: ${j}`, `object: ${mat[i][j - 1]}`)\n            }\n        }\n    }\n\n}\n\n//------------------GAME------------------------\n\n// export const time = () => {\n//     return {\n//         type: boardTypes.TIME,\n//     };\n// };\n\n// export const resetSettings = () => {\n//     return {\n//         type: boardTypes.RESTART_GAME,\n//     };\n// };\n\n// export const pause = (pauseFlag) => {\n//     const pause = pauseFlag === 1 ? 0 : 1\n//     return {\n//         type: boardTypes.PAUSE,\n//         payload: pause\n//     };\n// };\n\nexport const failed = () => {\n    return {\n        type: boardTypes.FAILED,\n    };\n};\n\n\nexport const finish = (mat) => {\n    let notFinish = 0;\n    mat.map(row => {\n        row.map(cell => {\n            if (cell.mine) {\n                if (!cell.mark == 1)\n                    notFinish = 1\n            }\n        })\n    })\n\n    if (!notFinish) {\n        console.log('perfect!')\n        return {\n            type: boardTypes.FINISH,\n        };\n    }\n    else {\n        console.log('there is a fals flag!!')\n\n    }\n\n    return {\n        type: boardTypes.EMPTY,\n    };\n};","export const gameTypes = {\n    //GAME\n    TIME: 'TIME',\n    CHANGE_LEVEL: 'CHANGE_LEVEL',\n    CHANGE_SIZE: \"CHANGE_SIZE\",\n    RESTART_GAME: \"RESTART_GAME\",\n    PAUSE: 'PAUSE',\n    LOADING: 'LOADING',\n}","import { gameTypes } from './types';\n\n\n//------------------GAME------------------------\n\nexport const time = () => {\n    return {\n        type: gameTypes.TIME,\n    };\n};\n\nexport const resetSettings = () => {\n    return {\n        type: gameTypes.RESTART_GAME,\n    };\n};\n\nexport const loading = () => {\n    return {\n        type: gameTypes.LOADING,\n    };\n};\n\n\nexport const pause = (pauseFlag) => {\n    const pause = pauseFlag === 1 ? 0 : 1\n    return {\n        type: gameTypes.PAUSE,\n        payload: pause\n    };\n};\n\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    cellClicked,\n    cellRightClick,\n    checkCell,\n    reduceMineLeft,\n    increaseMineLeft,\n} from '../../store/board/actions';\nconst MineButton = (props) => {\n    const board = useSelector(state => state.board);\n    const dispatch = useDispatch();\n    const checkBtn = () => {\n        if (!props.cell.open) {\n            if (props.mark === 1) {\n                return <i className=\"fa fa-flag\" aria-hidden=\"true\"></i>\n            }\n            else if (props.mark === 2)\n                return <i className=\"fa fa-question\" aria-hidden=\"true\"></i>\n            else\n                return null\n\n        }\n        else {\n            if (props.cell.value >= 15)\n                return <i className=\"fa fa-bomb\" aria-hidden=\"true\"></i>;\n            else if (props.cell.value === 0) {\n                return null\n            }\n            else\n                return props.cell.value\n        }\n\n    }\n\n    const value = checkBtn()\n    const style = {\n        color: props.cell.value >= 15 && props.cell.open ? 'black' : props.cell.value === 1 && props.cell.open ? '#047933' : props.cell.value === 2 && props.cell.open ? '#0c0398' : props.cell.value === 3 && props.cell.open ? 'red' : !props.cell.open && props.cell.mark === 1 ? '#e50808' : !props.cell.open && props.cell.mark === 2 ? '#dbce23' : 'black',\n    }\n\n    const [state, setstate] = useState({ longpress: 250, start: 0 })\n    const onMouseDown = (e) => { // when user start ontouch/click\n        e = e || window.event;\n        let tempStart = new Date().getTime();\n        setstate({ ...state, start: tempStart })\n    }\n\n    const onMouseLeave = (e) => {//if user move the mouse/touch\n        e = e || window.event;\n        setstate({ ...state, start: 0 })\n    }\n    const onMouseUp = (e) => { // when click/touch is over\n        e.preventDefault();\n        e = e || window.event;\n        if (new Date().getTime() >= (state.start + state.longpress)) { // when click/touch is LONG\n            debugger\n            if (board.amountOfMines >= 1)\n                dispatch(cellRightClick(props.cell.id));\n            if (props.cell.mark === 1)\n                dispatch(reduceMineLeft());\n            else if (props.cell.mark === 2) {\n                dispatch(increaseMineLeft());\n            }\n        } else {// when click/touch is over\n            switch (window.event.which) {\n                case 1: dispatch(cellClicked(props.cell.id));\n                    dispatch(checkCell(props.cell.id, props.board.board));\n                    break;\n\n                case 3:\n                    if (board.amountOfMines >= 1)\n                        dispatch(cellRightClick(props.cell.id));\n                    if (props.cell.mark === 1)\n                        dispatch(reduceMineLeft());\n                    else if (props.cell.mark === 2) {\n                        dispatch(increaseMineLeft());\n                    }\n                    break;\n                default:\n                    return -1\n            }\n        }\n\n    }\n\n    const test = window.screen.availWidth >= 900 ?\n        <button\n            // onTouchStart={onMouseDown} onTouchCancel={onMouseLeave} onTouchEnd={onMouseUp}\n            onMouseDown={onMouseDown} onMouseLeave={onMouseLeave} onMouseUp={onMouseUp}\n            disabled={props.cell.open}\n            style={style}\n            className={props.cell.mark === 1 ? \"btn flag\" : props.cell.mark === 2 ? 'btn question' : 'btn regular'}>\n            {value}\n        </button>\n        :\n        <button\n            onTouchStart={onMouseDown} onTouchCancel={onMouseLeave} onTouchEnd={onMouseUp}\n            // onMouseDown={onMouseDown} onMouseLeave={onMouseLeave} onMouseUp={onMouseUp}\n            disabled={props.cell.open}\n            style={style}\n            className={props.cell.mark === 1 ? \"btn flag\" : props.cell.mark === 2 ? 'btn question' : 'btn regular'}>\n            {value}\n        </button>\n    return (\n        <>\n            {test}\n        </>\n    )\n}\n\nexport default MineButton\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    buildBoard,\n    cellClicked,\n    cellRightClick,\n    finish,\n    // resetCounter,\n} from '../../store/board/actions';\nimport {\n    loading\n    // resetCounter,\n} from '../../store/game/actions';\nimport MineButton from '../buttons/MineButton';\n\nconst Board = props => {\n\n    const board = useSelector(state => state.board);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(loading());\n        dispatch(buildBoard(board.size, 1));\n        dispatch(loading());\n\n        return () => null\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if (board.amountOfMines <= 1)\n            dispatch(finish(board.board));\n    }, [board.amountOfMines])\n\n    const boardTemplate = board.board.map((row, key) => {\n        return (\n            <div className=\"row\" key={key}>\n                {row.map((cell, key) =>\n                    <div className=\"cell\" key={key} id={cell.id}>\n                        <MineButton board={board} value={cell.value} mark={cell.mark} cell={cell} clicked={() => dispatch(cellClicked(cell.id))} rightClicked={() => dispatch(cellRightClick(cell.id))} />\n                    </div>\n                )}\n            </div>\n        )\n    })\n\n    return (\n        <div>\n\n            <div className=\"board\">\n                {boardTemplate}\n            </div>\n        </div>\n\n    );\n};\n\nexport default Board;\n","import React from 'react'\n\nconst GameBtn = (props) => {\n\n    return (\n        <button className=\"settingBtn\" onClick={props.onclick} >{props.text}</button>\n    )\n}\n\nexport default GameBtn\n","import React, { useEffect } from 'react'\nimport GamepadButton from '../buttons/GameBtn'\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    time,\n    loading,\n    pause,\n    resetSettings,\n} from '../../store/game/actions';\nimport {\n    buildBoard\n} from '../../store/board/actions';\nconst Settings = () => {\n    const settings = useSelector(state => state.setting);\n    const board = useSelector(state => state.board);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let interval = null;\n        // if (!settings.pause)\n        //     interval = setInterval(() => {\n        //         dispatch(time());\n        //     }, 1000);\n        return () => clearInterval(interval);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [settings.pause])\n\n    const restartAll = () => {\n        dispatch(buildBoard(settings.size, settings.lvl));\n        dispatch(resetSettings())\n    }\n    return (\n        <div>\n            <div className=\"stats\" >\n                <div className=\"stats-time\">\n                    {settings.time}\n\n                </div>\n\n                <div className=\"stats-minesLeft\">\n                    {parseFloat(board.amountOfMines).toFixed(0)}\n                </div>\n            </div>\n            <GamepadButton text={'Pause'} onclick={() => dispatch(pause(settings.pause))} />\n            <GamepadButton text={'start over'} onclick={() => restartAll()} />\n            <GamepadButton text={'change level'} />\n        </div>\n    )\n}\n\nexport default Settings\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    time,\n    loading,\n    pause,\n    resetSettings,\n} from '../../store/game/actions';\nimport {\n    buildBoard, failed\n} from '../../store/board/actions';\nconst Failed = () => {\n    const settings = useSelector(state => state.setting);\n    const board = useSelector(state => state.board);\n    const dispatch = useDispatch();\n\n    const restartAll = () => {\n        dispatch(buildBoard(settings.size, settings.lvl));\n        dispatch(resetSettings())\n    }\n    return (\n        <div className=\"failed\">\n            <h2>YOU SUCK... AND DEAD!</h2>\n            <h3>game over! start over?</h3>\n            <button className=\"startOverBtn\" onClick={restartAll}>Play Again</button>\n        </div>\n    )\n}\n\nexport default Failed\n","import React, { useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './App.css';\nimport Board from './components/board/Board';\nimport Settings from './components/game/Settings'\nimport Failed from './components/screen/Failed'\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  time,\n  pause,\n  resetSettings,\n} from './store/game/actions';\nfunction App() {\n  const settings = useSelector(state => state.setting);\n  const board = useSelector(state => state.board);\n\n  const checkPage = () => {\n    let page = null\n    if (settings.pause === 1)\n      page = <div><Settings />PAUSED </div>\n\n    if (settings.pause === 0)\n      page = <div><Settings /> <Board /> </div>\n\n    if (settings.success === 1)\n      page = <div>success </div>\n\n    if (board.fail === 1)\n      page = <Failed />\n\n    if (board.finish === 1)\n      page = <h1>you did it!! you stayed alive!</h1>\n\n    return page\n  }\n\n  const gameOn = checkPage()\n\n  const loading = (\n    <div className='loading'>\n      <CircularProgress />\n    </div>\n  )\n  return (\n    <div className=\"App\">\n      {settings.isLoading ? loading : gameOn}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { boardTypes } from './types';\n\nconst initialState = {\n    board: [],\n    amountOfMines: 5, // higher number than 0 for initial\n    lvl: 1,\n    size: 9,\n    fail: 0,\n    time: 0,\n    pause: 0,\n    finish: 0,\n};\n\nconst boardReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        //------------------BUILD------------------------\n        case boardTypes.BUILD:\n            return {\n                ...state,\n                board: action.action,\n                amountOfMines: action.amountOfMines,\n                fail: 0\n            };\n\n        //------------------GENERAL ACTION------------------------\n\n        case boardTypes.CLICKED: // when player click LEFT CLICK on cell\n            let tempBoard = state.board\n            const row = action.action[0]\n            const collumn = action.action[1]\n            let tempCell = state.board[row].filter(obj => { // filter and get the specific cell\n                return obj.id === `${row}|${collumn}`\n            })\n\n            if (tempCell[0].mark !== 1) { // if the call is flag - dont change anything\n                tempCell[0].open = true\n                tempBoard[row][collumn] = { ...tempBoard[row][collumn], open: true }\n\n                return { ...state, board: tempBoard };\n            }\n            else\n                return { ...state };\n        case boardTypes.RIGHT_CLICKED: // when player click RIGHT CLICK on cell\n            let tempDoubleBoard = state.board\n            const rowRIGHT = action.action[0]\n            const collumnRIGHT = action.action[1]\n            let tempCellRIGHT = state.board[rowRIGHT].filter(obj => {\n                return obj.id === `${rowRIGHT}|${collumnRIGHT}`\n            })\n            tempCellRIGHT[0].mark += 1; // 0 = null, 1 = flag, 2 = question mark\n            if (tempCellRIGHT[0].mark > 2)\n                tempCellRIGHT[0].mark = 0;\n\n            tempDoubleBoard[rowRIGHT][collumnRIGHT] = { ...tempDoubleBoard[rowRIGHT][collumnRIGHT], mark: tempCellRIGHT[0].mark }\n            return { ...state, board: tempDoubleBoard };\n\n        case boardTypes.CHECK_CELL: //get new matrix and update state\n            return { ...state, board: action.payload }\n\n        case boardTypes.REDUCE_MINE_LEFT: // decrease amount of mine left in the game\n            return { ...state, amountOfMines: state.amountOfMines - 1 }\n\n        case boardTypes.INCREASE_MINE_LEFT:// increase amount of mine left in the game\n            return { ...state, amountOfMines: state.amountOfMines + 1 }\n\n\n        //------------------GAME------------------------\n\n        case boardTypes.TIME: // timer for each game\n            const newTime = state.time + 1\n            return { ...state, time: newTime }\n\n        case boardTypes.RESTART_GAME: // reset time\n            const reTime = 0\n            return { ...state, time: reTime }\n\n        case boardTypes.PAUSE: // pause will stop tmer\n            const pause = action.payload\n            return { ...state, pause: pause }\n\n        case boardTypes.FAILED: // game end.\n            const failed = 1\n            return { ...state, fail: failed }\n\n        case boardTypes.FINISH: // game end.\n            const finished = 1\n            return { ...state, finish: finished }\n\n\n        default:\n            return { ...state };\n    }\n\n};\n\nexport default boardReducer;\n","import { gameTypes } from './types';\n\nconst initialState = {\n    lvl: 1,\n    size: 9,\n    time: 0,\n    pause: 0,\n    restart: 0,\n    success: 0,\n    isLoading: 0,\n};\n\nconst boardReducer = (state = initialState, action) => {\n    switch (action.type) {\n        //------------------FLAGS------------------------\n\n        case gameTypes.LOADING:\n            const isLoading = !state.isLoading\n            return { ...state, isLoading: isLoading }\n        //------------------GAME------------------------\n\n        case gameTypes.TIME:\n            const newTime = state.time + 1\n            return {\n                ...state,\n                time: newTime\n            }\n\n        case gameTypes.RESTART_GAME:\n            return {\n                ...state,\n                time: 0,\n                pause: 0,\n                restart: 0,\n                success: 0,\n                isLoading: 0,\n            }\n\n        case gameTypes.PAUSE:\n            const pause = action.payload\n            return {\n                ...state,\n                pause: pause\n            }\n\n        default:\n            return { ...state };\n    }\n};\n\nexport default boardReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport boardReducer from './store/board/reducer';\nimport gameReducer from './store/game/reducer';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst rootReducer = combineReducers({\n  // posts: postsReducer,\n  setting: gameReducer,\n  board: boardReducer,\n});\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}