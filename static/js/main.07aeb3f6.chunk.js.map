{"version":3,"sources":["images/rsz_ogmodh0.png","images/rsz_22553.png","store/board/types.js","store/board/actions.js","store/game/types.js","store/game/actions.js","components/buttons/MineButton.js","components/board/Board.js","components/buttons/GameBtn.js","components/game/Settings.js","components/screen/Failed.js","components/screen/Success.js","components/welcome/Welcome.js","components/game/ChangeSettings.js","App.js","serviceWorker.js","store/board/reducer.js","store/game/reducer.js","index.js"],"names":["module","exports","boardTypes","BUILD","CLICKED","RIGHT_CLICKED","REDUCE_MINE_LEFT","INCREASE_MINE_LEFT","CHECK_CELL","EMPTY","SAVE_CHANGE","CHANGE_LEVEL","CHANGE_SIZE","RESTART_GAME","FAILED","FINISH","RESET","cellClicked","cellId","res","split","type","action","cellRightClick","reduceMineLeft","increaseMineLeft","recCheckCell","mat","checkCell","id","row","parseInt","col","tempMat","value","mark","open","error","payload","buildBoard","size","lvl","amountOfMines","Math","ceil","matrix","mineLeft","i","j","mine","randomLine","random","randomCol","checkAndSetCloseToMine","length","finish","boardSize","amountOfOpenCells","amountOfCells","intvalue","map","cell","gameTypes","resetSettings","loading","pause","pauseFlag","changeSettings","settingsFlag","MineButton","props","board","useSelector","state","dispatch","useDispatch","className","aria-hidden","style","color","backgroundColor","useState","longpress","start","setstate","onMouseDown","e","preventDefault","window","event","tempStart","Date","getTime","onMouseUp","target","which","onTouchStart","onTouchEnd","onMouseLeave","disabled","Board","useEffect","time","amountCellShouldBeOpen","boardTemplate","key","clicked","rightClicked","GameBtn","Button","variant","onClick","onclick","text","Settings","settings","setting","clearInterval","restartAll","toggle","Failed","Success","Welcome","src","image","alt","close","href","ChangeSettings","explanationHTML","lvlName","precentage","noOfCells","explanation","Slider","defaultValue","step","marks","getAriaValueText","min","max","valueLabelDisplay","onChange","newValue","App","gameOn","page","fail","checkPage","CircularProgress","showImage","setShowImage","backgroundImage","background","isLoading","Boolean","location","hostname","match","initialState","boardReducer","tempBoard","collumn","tempCell","filter","obj","newAmountOpen","tempDoubleBoard","rowRIGHT","collumnRIGHT","tempCellRIGHT","failed","finished","restart","success","newTime","rootReducer","combineReducers","gameReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.07aeb3f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rsz_ogmodh0.9da60ef6.png\";","module.exports = __webpack_public_path__ + \"static/media/rsz_22553.68aab075.png\";","export const boardTypes = {\n    //BOARD\n    BUILD: 'BUILD',\n    CLICKED: 'CLICKED',\n    RIGHT_CLICKED: \"RIGHT_CLICKED\",\n    REDUCE_MINE_LEFT: 'REDUCE_MINE_LEFT',\n    INCREASE_MINE_LEFT: 'INCREASE_MINE_LEFT',\n    CHECK_CELL: 'CHECK_CELL',\n    EMPTY: 'EMPTY',\n    SAVE_CHANGE: 'SAVE_CHANGE',\n\n\n    //GAME\n    CHANGE_LEVEL: 'CHANGE_LEVEL',\n    CHANGE_SIZE: \"CHANGE_SIZE\",\n    RESTART_GAME: \"RESTART_GAME\",\n    FAILED: 'FAILED',\n    FINISH: 'FINISH',\n    RESET: 'RESET'\n};\n\n","import { boardTypes } from './types';\n\n//------------------GENERAL CELL ACTIONS------------------------\nexport const cellClicked = (cellId) => {\n    const res = cellId.split(\"|\");\n\n    return {\n        type: boardTypes.CLICKED,\n        action: res\n    };\n};\nexport const cellRightClick = (cellId) => {\n    const res = cellId.split(\"|\");\n\n    return {\n        type: boardTypes.RIGHT_CLICKED,\n        action: res\n    }\n};\nexport const reduceMineLeft = () => {\n    return {\n        type: boardTypes.REDUCE_MINE_LEFT,\n\n    };\n};\nexport const increaseMineLeft = () => {\n    return {\n        type: boardTypes.INCREASE_MINE_LEFT,\n\n    };\n};\n\nexport const markCell = () => {\n    return {\n        type: boardTypes.DECREASE,\n    };\n};\n\nconst recCheckCell = (cellId, mat) => {\n    checkCell(cellId.id, mat)\n}\nexport const checkCell = (cellId, mat) => {\n    const res = cellId.split(\"|\");\n    const row = parseInt(res[0]), col = parseInt(res[1])\n    let tempMat = mat;\n    if (mat[res[0]][res[1]].value === 0 && mat[res[0]][res[1]].mark !== 1) {\n        try {\n            if (!tempMat[row - 1][col].open && tempMat[row - 1][col].mark !== 1) { // UP\n                tempMat[row - 1][col].open = true\n                if (tempMat[row - 1][col].value === 0) {\n                    recCheckCell(tempMat[row - 1][col], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row + 1][col].open && tempMat[row + 1][col].mark !== 1) { // DOWN\n                tempMat[row + 1][col].open = true\n                if (tempMat[row + 1][col].value === 0) {\n                    recCheckCell(tempMat[row + 1][col], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row][col - 1].open && tempMat[row][col - 1].mark !== 1) { //LEFT\n                tempMat[row][col - 1].open = true\n                if (tempMat[row][col - 1].value === 0) {\n                    recCheckCell(tempMat[row][col - 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row][col + 1].open && tempMat[row][col + 1].mark !== 1) { //RIGHT\n                tempMat[row][col + 1].open = true\n                if (tempMat[row][col + 1].value === 0) {\n                    recCheckCell(tempMat[row][col + 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row - 1][col - 1].open && tempMat[row - 1][col - 1].mark !== 1) { //UP LEFT\n                tempMat[row - 1][col - 1].open = true\n                if (tempMat[row - 1][col - 1].value === 0) {\n                    recCheckCell(tempMat[row - 1][col - 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row - 1][col + 1].open && tempMat[row - 1][col + 1].mark !== 1) { //UP RIGHT\n                tempMat[row - 1][col + 1].open = true\n                if (tempMat[row - 1][col + 1].value === 0) {\n                    recCheckCell(tempMat[row - 1][col + 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row + 1][col + 1].open && tempMat[row + 1][col + 1].mark !== 1) { //DOWN RIGHT\n                tempMat[row + 1][col + 1].open = true\n                if (tempMat[row + 1][col + 1].value === 0) {\n                    recCheckCell(tempMat[row + 1][col + 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row + 1][col - 1].open && tempMat[row + 1][col - 1].mark !== 1) { //DOWN LEFT\n                tempMat[row + 1][col - 1].open = true\n                if (tempMat[row + 1][col - 1].value === 0) {\n                    recCheckCell(tempMat[row + 1][col - 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n    }\n\n    else if (mat[res[0]][res[1]].value >= 15 && mat[res[0]][res[1]].mark !== 1) {\n        return {\n            type: boardTypes.FAILED,\n        };\n    }\n\n    return {\n        type: boardTypes.CHECK_CELL,\n        payload: tempMat\n    };\n};\n\n//------------------BUILD------------------------\nexport const buildBoard = (size, lvl) => {\n    //lvl = easy : 12% mines , medium : 20% , hard :30%\n    // size = 9x9 , 5x5 , 12x12 , 20x20\n    const amountOfMines = lvl === 1 ? Math.ceil(0.12 * size * size)\n        : lvl === 2 ? Math.ceil(0.2 * size * size)\n            : Math.ceil(0.30 * size * size)\n    let matrix = [], mineLeft = amountOfMines;\n    for (let i = 0; i < size; i++) {\n        matrix[i] = [];\n        for (let j = 0; j < size; j++) {\n            matrix[i][j] = { id: `${i}|${j}`, mine: false, open: false, value: 0, mark: 0 };\n        }\n    }\n    while (!(mineLeft === 0)) {\n        let randomLine = Math.ceil(Math.random() * size - 1), randomCol = Math.ceil(Math.random() * size - 1)\n        if (!matrix[randomLine][randomCol].mine) { //if the cell is mine - find a new cell\n            matrix[randomLine][randomCol] = { id: `${randomLine}|${randomCol}`, mine: true, open: false, value: 15, mark: 0 };\n            mineLeft--\n        }\n    }\n\n    checkAndSetCloseToMine(matrix, size)\n    return {\n        type: boardTypes.BUILD,\n        action: matrix,\n        amountOfMines,\n    };\n};\n\nconst checkAndSetCloseToMine = (mat, size) => {\n    for (let i = 0; i < size; i++) {\n        for (let j = 0; j < size; j++) {\n            try {\n                if (mat[i][j].mine) {//incase mine detect\n                    if (i === 0) { // if first row\n                        if (j === 0) { // top left corner\n                            mat[i][j + 1].value += 1;\n                            mat[i + 1][j].value += 1;\n                            mat[i + 1][j + 1].value += 1;\n                        }\n                        else if (j === mat.length - 1) { // top right corner\n                            mat[i][j - 1].value += 1\n                            mat[i + 1][j].value += 1\n                            mat[i + 1][j - 1].value += 1\n                        }\n                        else {\n                            mat[i][j - 1].value += 1\n                            mat[i][j + 1].value += 1\n                            mat[i + 1][j].value += 1\n                            mat[i + 1][j - 1].value += 1\n                            mat[i + 1][j + 1].value += 1\n                        }\n                    }\n                    else if (i === mat.length - 1) { // if last row\n                        if (j === 0) { // buttom left corner\n                            mat[i][j + 1].value += 1;\n                            mat[i - 1][j].value += 1;\n                            mat[i - 1][j + 1].value += 1;\n                        }\n                        else if (j === mat.length - 1) {\n                            mat[i][j - 1].value += 1; // add 1 value to near by cell\n                            mat[i - 1][j].value += 1;\n                            mat[i - 1][j - 1].value += 1;\n                        }\n                        else {\n                            mat[i][j - 1].value += 1;\n                            mat[i][j + 1].value += 1;\n                            mat[i - 1][j].value += 1;\n                            mat[i - 1][j - 1].value += 1;\n                            mat[i - 1][j + 1].value += 1;\n                        }\n                    }\n                    else if (j === 0) { // left column\n                        mat[i - 1][j].value += 1\n                        mat[i + 1][j].value += 1\n                        mat[i][j + 1].value += 1\n                        mat[i - 1][j + 1].value += 1\n                        mat[i + 1][j + 1].value += 1\n                    }\n                    else if (j === mat.length - 1) { //right column\n                        mat[i - 1][j].value += 1\n                        mat[i + 1][j].value += 1\n                        mat[i][j - 1].value += 1\n                        mat[i - 1][j - 1].value += 1\n                        mat[i + 1][j - 1].value += 1\n                    }// middle matrix\n                    else {\n                        mat[i - 1][j + 1].value += 1\n                        mat[i - 1][j].value += 1\n                        mat[i - 1][j - 1].value += 1\n                        mat[i + 1][j + 1].value += 1\n                        mat[i + 1][j].value += 1\n                        mat[i + 1][j - 1].value += 1\n                        mat[i][j + 1].value += 1\n                        mat[i][j - 1].value += 1\n                    }\n                }\n            } catch (error) {\n                //\n            }\n        }\n    }\n\n}\n\n//------------------GAME------------------------\nexport const failed = () => {\n    return {\n        type: boardTypes.FAILED,\n    };\n};\nexport const resetBoard = () => {\n    return {\n        type: boardTypes.RESET,\n    };\n};\nexport const finish = (mat, boardSize, amountOfMines) => {\n    let finish = 1, amountOfOpenCells = 0, amountOfCells = boardSize * boardSize\n    const intvalue = Math.ceil(amountOfMines);\n\n    mat.map(row => {\n        row.map(cell => {\n            if (cell.mine) {\n                if (cell.mark !== 1)\n                    finish = 0\n            }\n            else if (cell.open)\n                amountOfOpenCells++\n        })\n    })\n    amountOfOpenCells = amountOfCells - amountOfOpenCells\n    if (finish || intvalue === amountOfOpenCells) { // user put flag on all mines OR reviled all empty cells\n        return {\n            type: boardTypes.FINISH,\n        };\n    }\n    return {\n        type: boardTypes.EMPTY,\n    };\n};\n\n//------------------GENERAL------------------------\n\nexport const saveChange = (size, lvl) => {\n    return {\n        type: boardTypes.SAVE_CHANGE,\n        size,\n        lvl\n    };\n};\n","export const gameTypes = {\n    //GAME\n    TIME: 'TIME',\n    CHANGE_LEVEL: 'CHANGE_LEVEL',\n    CHANGE_SIZE: \"CHANGE_SIZE\",\n    RESTART_GAME: \"RESTART_GAME\",\n    PAUSE: 'PAUSE',\n    LOADING: 'LOADING',\n    SETTINGS: 'SETTINGS',\n}","import { gameTypes } from './types';\n\n\n//------------------GAME------------------------\n\nexport const time = () => {\n    return {\n        type: gameTypes.TIME,\n    };\n};\n\nexport const resetSettings = () => {\n    return {\n        type: gameTypes.RESTART_GAME,\n    };\n};\n\nexport const loading = () => {\n    return {\n        type: gameTypes.LOADING,\n    };\n};\n\n\nexport const pause = (pauseFlag) => {\n    const pause = pauseFlag === 1 ? 0 : 1\n    return {\n        type: gameTypes.PAUSE,\n        payload: pause\n    };\n};\n\n\n\nexport const changeSettings = (settingsFlag) => {\n    const settings = settingsFlag === 1 ? 0 : 1\n    return {\n        type: gameTypes.SETTINGS,\n        payload: settings\n    };\n};\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    cellClicked,\n    cellRightClick,\n    checkCell,\n    reduceMineLeft,\n    increaseMineLeft,\n    finish,\n} from '../../store/board/actions';\nconst MineButton = (props) => {\n    const board = useSelector(state => state.board);\n    const dispatch = useDispatch();\n    const checkBtn = () => {\n        if (!props.cell.open) {\n            if (props.mark === 1) {\n                return <i className=\"fa fa-flag\" aria-hidden=\"true\"></i>\n            }\n            else if (props.mark === 2)\n                return <i className=\"fa fa-question\" aria-hidden=\"true\"></i>\n            else\n                return null\n\n        }\n        else {\n            if (props.cell.value >= 15)\n                return <i className=\"fa fa-bomb\" aria-hidden=\"true\"></i>;\n            else if (props.cell.value === 0) {\n                return null\n            }\n            else\n                return props.cell.value\n        }\n\n    }\n\n    const value = checkBtn()\n    const style = {\n        color: props.cell.value >= 15 && props.cell.open ? 'black' : props.cell.value === 1 && props.cell.open ? '#047933' : props.cell.value === 2 && props.cell.open ? '#0c0398' : props.cell.value === 3 && props.cell.open ? 'red' : !props.cell.open && props.cell.mark === 1 ? '#e50808' : !props.cell.open && props.cell.mark === 2 ? '#dbce23' : 'black',\n        backgroundColor: props.cell.mine && props.cell.open ? 'red' : null\n    }\n\n    const [state, setstate] = useState({ longpress: 350, start: 0 })\n    const onMouseDown = (e) => { // when user start ontouch/click\n        e.preventDefault();\n\n        e = e || window.event;\n        let tempStart = new Date().getTime();\n        setstate({ ...state, start: tempStart })\n    }\n\n    const onMouseLeave = (e) => {//if user move the mouse/touch\n        e.preventDefault();\n\n        e = e || window.event;\n        setstate({ ...state, start: 0 })\n    }\n    const onMouseUp = (e) => { // when click/touch is over\n        e.preventDefault();\n        e = e || window.event;\n        if (!props.cell.open) {\n\n            if (new Date().getTime() >= (state.start + state.longpress)) { // when click/touch is LONG\n                if (board.amountOfMines > 0 || e.target.className === 'fa fa-flag')//mines left or the cell is a flag\n                    dispatch(cellRightClick(props.cell.id));\n                if (props.cell.mark === 1)\n                    dispatch(reduceMineLeft());\n                else if (props.cell.mark === 2) {\n                    dispatch(increaseMineLeft());\n                }\n            } else {// when click/touch is over && SHORT)\n                switch (window.event.which) {\n                    case 0: // touch mobile\n                        dispatch(cellClicked(props.cell.id));\n                        dispatch(checkCell(props.cell.id, props.board.board));\n                        dispatch(finish(board.board, board.size, board.amountOfMines));\n\n                        break;\n\n                    case 1: // left click\n                        dispatch(cellClicked(props.cell.id));\n                        dispatch(checkCell(props.cell.id, props.board.board));\n                        dispatch(finish(board.board, board.size, board.amountOfMines));\n\n                        break;\n\n                    case 3: // right click\n                        if (board.amountOfMines > 0 || e.target.className === 'fa fa-flag')//mines left or the cell is a flag\n                            dispatch(cellRightClick(props.cell.id));\n                        if (props.cell.mark === 1 && board.amountOfMines > 0)\n                            dispatch(reduceMineLeft());\n                        else if (props.cell.mark === 2) {\n                            dispatch(increaseMineLeft());\n                        }\n                        break;\n                    default:\n                        return -1\n                }\n            }\n        }\n    }\n\n    return (\n        <button\n            onTouchStart={onMouseDown} onTouchEnd={onMouseUp}\n            onMouseDown={onMouseDown} onMouseLeave={onMouseLeave} onMouseUp={onMouseUp}\n            disabled={props.cell.open}\n            style={style}\n            className={props.cell.mark === 1 ? \"btn flag\" : props.cell.mark === 2 ? 'btn question' : 'btn regular'}>\n            {value}\n        </button>\n    )\n}\n\nexport default MineButton\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    buildBoard,\n    cellClicked,\n    cellRightClick,\n    finish,\n    // resetCounter,\n} from '../../store/board/actions';\nimport {\n    loading\n} from '../../store/game/actions';\nimport MineButton from '../buttons/MineButton';\n\nconst Board = props => {\n    const board = useSelector(state => state.board);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (board.time === 0) {\n            dispatch(loading());\n            dispatch(buildBoard(board.size, board.lvl));\n            dispatch(loading());\n        }\n\n\n        return () => null\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [board.lvl, board.size])\n\n    useEffect(() => {\n        if (board.amountOfMines === 0 || board.amountCellShouldBeOpen <= 1)\n            dispatch(finish(board.board, board.size, board.amountOfMines));\n    }, [board.amountOfMines])\n\n    const boardTemplate = board.board.map((row, key) => {\n        return (\n            <div className=\"row\" key={key}>\n                {row.map((cell, key) =>\n                    <div className=\"cell\" key={key} id={cell.id}>\n                        <MineButton board={board} value={cell.value} mark={cell.mark} cell={cell} clicked={() => dispatch(cellClicked(cell.id))} rightClicked={() => dispatch(cellRightClick(cell.id))} />\n                    </div>\n                )}\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            <div className=\"board\">\n                {boardTemplate}\n            </div>\n        </div>\n\n    );\n};\n\nexport default Board;\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\n\nconst GameBtn = (props) => {\n\n    return (\n        <Button size=\"small\" variant=\"contained\" color=\"primary\" className='settingBtn' onClick={props.onclick}>\n            {props.text}\n        </Button>\n    )\n}\n\nexport default GameBtn\n","import React, { useEffect } from 'react'\nimport GamepadButton from '../buttons/GameBtn'\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\n\nimport {\n    changeSettings,\n    time,\n    pause,\n    resetSettings,\n} from '../../store/game/actions';\nimport {\n    buildBoard\n} from '../../store/board/actions';\nconst Settings = () => {\n    const settings = useSelector(state => state.setting);\n    const board = useSelector(state => state.board);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        let interval = null;\n        // if (!settings.pause)\n        //     interval = setInterval(() => {\n        //         dispatch(time());\n        //     }, 1000);\n        return () => clearInterval(interval);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [settings.pause])\n\n    const restartAll = () => {\n        dispatch(buildBoard(board.size, board.lvl));\n        dispatch(resetSettings())\n    }\n    const settingsAndPause = () => {\n        dispatch(pause(settings.pause));\n    }\n    const toggle = (\n        settings.pause === 0 ?\n            <div className='settings-toggle'>\n                <Button size=\"medium\" variant=\"contained\" color=\"primary\" className='settingBtn' onClick={settingsAndPause}>\n                    Settings\n            </Button>\n            </div>\n            :\n            <div className=\"settings-btns\">\n                <GamepadButton text={'Start over'} onclick={() => restartAll()} />\n                <GamepadButton text={'Change level'} onclick={() => dispatch(changeSettings(settings.settings))} />\n                <Button size=\"small\" variant=\"contained\" color=\"primary\" className='settingBtn' onClick={() => { dispatch(pause(settings.pause)); }}>\n                    close\n                </Button>\n            </div >\n    )\n    return (\n        <div>\n            <div className=\"stats\" >\n                <div className=\"stats-time\">\n                    {settings.time}\n                </div>\n\n                <div className=\"stats-minesLeft\">\n                    {Math.ceil(board.amountOfMines)}\n                </div>\n            </div>\n            <div className=\"stats\" >\n                <GamepadButton text={'Start over'} onclick={() => restartAll()} />\n                {toggle}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Settings\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\n\nimport {\n    resetSettings,\n} from '../../store/game/actions';\nimport {\n    buildBoard,\n} from '../../store/board/actions';\nconst Failed = () => {\n    const board = useSelector(state => state.board);\n    const dispatch = useDispatch();\n\n    const restartAll = () => {\n        dispatch(buildBoard(board.size, board.lvl));\n        dispatch(resetSettings())\n    }\n    return (\n        <div className=\"failed\">\n            <h2>YOU SUCK... AND DEAD!</h2>\n            <h3>game over! start over?</h3>\n            <Button size=\"medium\" variant=\"contained\" color=\"primary\" className=\"startOverBtn\" onClick={restartAll}>\n                Play Again\n            </Button>\n        </div>\n    )\n}\n\nexport default Failed\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\n\nimport {\n    resetSettings,\n} from '../../store/game/actions';\nimport {\n    buildBoard, resetBoard\n} from '../../store/board/actions';\nconst Success = () => {\n    const board = useSelector(state => state.board);\n    const dispatch = useDispatch();\n\n    const restartAll = () => {\n        dispatch(buildBoard(board.size, board.lvl));\n        dispatch(resetSettings())\n        dispatch(resetBoard())\n\n\n    }\n    return (\n        <div className=\"success\">\n            <h1>you did it!! you stayed alive!</h1>\n            <Button size=\"medium\" variant=\"contained\" color=\"primary\" className=\"startOverBtn\" onClick={restartAll}>\n                Play Again\n            </Button>\n        </div>\n    )\n}\n\nexport default Success\n","import React from 'react'\nimport image from '../../images/rsz_22553.png'; // with import\nimport background from '../../images/rsz_ogmodh0.png'\nimport Button from '@material-ui/core/Button';\n\nconst Welcome = (props) => {\n    return (\n        <div className=\"App\" >\n            <h1 className=\"welcome-title\">Do you have what it takes to clean all the mines and stay alive? </h1>\n            <img src={image} alt=\"army mine sweepers\" className=\"welcome-img\" />\n            <Button size=\"medium\" variant=\"contained\" color=\"primary\" className='settingBtn' onClick={props.close}>\n                IM READY FOR SOME ACTION\n            </Button>\n            <a href='https://www.freepik.com/free-photos-vectors/technology'>Technology vector created by macrovector - www.freepik.com</a>\n\n        </div>\n    )\n}\n\nexport default Welcome\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport Slider from '@material-ui/core/Slider';\nimport GamepadButton from '../buttons/GameBtn'\nimport {\n    saveChange,\n} from '../../store/board/actions';\nimport {\n    pause,\n    changeSettings\n} from '../../store/game/actions';\nconst ChangeSettings = () => {\n    const settings = useSelector(state => state.setting);\n    const board = useSelector(state => state.board);\n    const dispatch = useDispatch();\n\n    const [state, setstate] = useState({ lvl: board.lvl, size: board.size })\n\n    const saveChanges = () => {\n        dispatch(saveChange(state.size, state.lvl))\n        dispatch(pause(settings.pause))\n        dispatch(changeSettings(settings.settings))\n\n    }\n\n    const marks = [\n        {\n            value: 0,\n            label: 'Intern',\n        },\n        {\n            value: 1,\n            label: 'Junior',\n        },\n        {\n            value: 2,\n            label: 'Expert',\n        },\n    ];\n\n\n    function valuetext(value) {\n        // const value\n        return value === 1 ? \"Intern\" : value === 2 ? \"Junior\" : \"Expert\";\n    }\n\n    const explanation = () => {\n        const lvlName = state.lvl === 1 ? \"Intern\" : state.lvl === 2 ? \"Junior\" : \"Expert\";\n        const precentage = state.lvl === 1 ? 12 : state.lvl === 2 ? 20 : 30;\n        const noOfCells = state.size * state.size\n\n        return (<div className=\"explanation\">\n            <h2 className=\"explanation-details\">difficulty - {lvlName}: {precentage}% out of {noOfCells} cells (Round up)</h2>\n            <h3 className=\"explanation-summary\">total: {Math.ceil((precentage * state.size * state.size) / 100)} cell</h3>\n        </div>\n        )\n    }\n\n    const explanationHTML = explanation()\n    return (\n        <div className=\"settings\">\n            <div className=\"settingsItem\">\n                size: {state.size}\n                <Slider\n                    defaultValue={board.size}\n                    step={1}\n                    marks\n                    getAriaValueText={valuetext}\n\n                    min={5}\n                    max={20}\n                    valueLabelDisplay=\"auto\"\n                    onChange={(event, newValue) => { setstate({ ...state, size: newValue }) }}\n                />\n            </div>\n            <div className=\"settingsItem\">\n                difficulty: {state.lvl === 1 ? \"Intern\" : state.lvl === 2 ? \"Junior\" : \"Expert\"}\n                <Slider\n                    defaultValue={board.lvl}\n                    step={1}\n                    marks\n                    min={1}\n                    max={3}\n                    // valueLabelDisplay=\"auto\"\n                    onChange={(event, newValue) => { setstate({ ...state, lvl: newValue }) }}\n                />\n                {explanationHTML}\n            </div>\n            <div className=\"saveChanges-btn\">\n                <GamepadButton text={'Save'} onclick={saveChanges} />\n            </div>\n        </div>\n    )\n}\n\nexport default ChangeSettings\n","import React, { useEffect, useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './App.css';\nimport Board from './components/board/Board';\nimport Settings from './components/game/Settings'\nimport Failed from './components/screen/Failed'\nimport Success from './components/screen/Success';\nimport Welcome from './components/welcome/Welcome';\n\nimport background from './images/rsz_ogmodh0.png'\n\nimport ChangeSettings from './components/game/ChangeSettings'\nimport { useSelector } from 'react-redux';\nfunction App() {\n  const settings = useSelector(state => state.setting);\n  const board = useSelector(state => state.board);\n\n  const checkPage = () => {\n    let page = null\n    if (board.fail === 1)\n      page = <Failed />\n    if (board.finish === 1)\n      page = <Success />\n\n    return page\n  }\n  const gameOn = checkPage()\n  const loading = (\n    <div className='loading'>\n      <CircularProgress />\n    </div>\n  )\n  const changeSettings = settings.settings ? <ChangeSettings /> : null\n\n  const [showImage, setShowImage] = useState(true)\n\n  useEffect(() => {\n    // setTimeout(() => {\n    //   setShowImage(false)\n    // }, 3000);\n    return () => {\n    }\n  }, [])\n\n  const appView =\n    (\n      showImage === true ?\n        <Welcome close={setShowImage} />\n        :\n        <div className=\"App\" style={{ backgroundImage: `url(${background})` }}>\n          {changeSettings}\n          {settings.isLoading ? loading : gameOn}\n          {settings.isLoading ? null : <div><Settings /><Board /> </div>}\n          <a href='https://www.freepik.com/free-photos-vectors/background'>Background photo created by jannoon028 - www.freepik.com</a>\n        </div>\n    )\n  return (\n    appView\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { boardTypes } from './types';\n\nconst initialState = {\n    board: [],\n    amountOfMines: 5, // higher number than 0 for initial\n    amountCellShouldBeOpen: 78,\n    lvl: 1,\n    size: 9,\n    fail: 0,\n    time: 0,\n    pause: 0,\n    finish: 0,\n    settings: 0,\n};\n\nconst boardReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        //------------------BUILD------------------------\n        case boardTypes.BUILD:\n            return {\n                ...state,\n                board: action.action,\n                amountOfMines: action.amountOfMines,\n                fail: 0\n            };\n\n        //------------------GENERAL ACTION------------------------\n\n        case boardTypes.CLICKED: // when player click LEFT CLICK on cell\n            let tempBoard = state.board\n            const row = action.action[0]\n            const collumn = action.action[1]\n            let tempCell = state.board[row].filter(obj => { // filter and get the specific cell\n                return obj.id === `${row}|${collumn}`\n            })\n\n            if (tempCell[0].mark !== 1) { // if the call is flag - dont change anything\n                tempCell[0].open = true\n                tempBoard[row][collumn] = { ...tempBoard[row][collumn], open: true }\n                const newAmountOpen = state.amountCellShouldBeOpen - 1\n                return { ...state, board: tempBoard, amountCellShouldBeOpen: newAmountOpen };\n            }\n            else\n                return { ...state };\n        case boardTypes.RIGHT_CLICKED: // when player click RIGHT CLICK on cell\n            let tempDoubleBoard = state.board\n            const rowRIGHT = action.action[0]\n            const collumnRIGHT = action.action[1]\n            let tempCellRIGHT = state.board[rowRIGHT].filter(obj => {\n                return obj.id === `${rowRIGHT}|${collumnRIGHT}`\n            })\n            if (!tempCellRIGHT[0].open) {\n                tempCellRIGHT[0].mark += 1; // 0 = null, 1 = flag, 2 = question mark\n                if (tempCellRIGHT[0].mark > 2)\n                    tempCellRIGHT[0].mark = 0;\n\n                tempDoubleBoard[rowRIGHT][collumnRIGHT] = { ...tempDoubleBoard[rowRIGHT][collumnRIGHT], mark: tempCellRIGHT[0].mark }\n                return { ...state, board: tempDoubleBoard };\n\n            }\n        case boardTypes.CHECK_CELL: //get new matrix and update state\n            return { ...state, board: action.payload }\n\n        case boardTypes.REDUCE_MINE_LEFT: // decrease amount of mine left in the game\n            return { ...state, amountOfMines: state.amountOfMines - 1 }\n\n        case boardTypes.INCREASE_MINE_LEFT:// increase amount of mine left in the game\n            return { ...state, amountOfMines: state.amountOfMines + 1 }\n\n        case boardTypes.SAVE_CHANGE:\n            return {\n                ...state,\n                size: action.size,\n                lvl: action.lvl\n            }\n        //------------------GAME------------------------\n        case boardTypes.FAILED: // game end.\n            const failed = 1\n            return { ...state, fail: failed }\n\n        case boardTypes.FINISH: // game end.\n            const finished = 1\n            return { ...state, finish: finished }\n\n        case boardTypes.RESET: // game end.\n            return { ...state, finish: 0 }\n        default:\n            return { ...state };\n    }\n\n};\n\nexport default boardReducer;\n","import { gameTypes } from './types';\n\nconst initialState = {\n    time: 0,\n    pause: 0,\n    restart: 0,\n    success: 0,\n    isLoading: 0,\n    settings: 0,\n};\n\nconst boardReducer = (state = initialState, action) => {\n    switch (action.type) {\n        //------------------FLAGS------------------------\n        case gameTypes.LOADING:\n            const isLoading = !state.isLoading\n            return { ...state, isLoading: isLoading }\n        //------------------GAME------------------------\n\n        case gameTypes.TIME:\n            const newTime = state.time + 1\n            return {\n                ...state,\n                time: newTime\n            }\n\n        case gameTypes.RESTART_GAME:\n            return {\n                ...state,\n                time: 0,\n                pause: 0,\n                restart: 0,\n                success: 0,\n                isLoading: 0,\n            }\n\n        case gameTypes.PAUSE:\n            const pause = action.payload\n            return {\n                ...state,\n                pause: pause\n            }\n\n        case gameTypes.SETTINGS:\n            const settings = action.payload\n            return {\n                ...state,\n                settings: settings\n            }\n\n\n\n        default:\n            return { ...state };\n    }\n};\n\nexport default boardReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport boardReducer from './store/board/reducer';\nimport gameReducer from './store/game/reducer';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst rootReducer = combineReducers({\n  // posts: postsReducer,\n  setting: gameReducer,\n  board: boardReducer,\n});\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}