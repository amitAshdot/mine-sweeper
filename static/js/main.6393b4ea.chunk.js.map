{"version":3,"sources":["store/board/types.js","store/board/actions.js","store/game/types.js","store/game/actions.js","components/buttons/MineButton.js","components/board/Board.js","components/buttons/GameBtn.js","components/game/Settings.js","components/screen/Failed.js","App.js","serviceWorker.js","store/board/reducer.js","store/game/reducer.js","index.js"],"names":["boardTypes","BUILD","CLICKED","RIGHT_CLICKED","REDUCE_MINE_LEFT","INCREASE_MINE_LEFT","CHECK_CELL","RESET","EMPTY","TIME","CHANGE_LEVEL","CHANGE_SIZE","RESTART_GAME","PAUSE","FAILED","cellClicked","cellId","res","split","failed","type","action","cellRightClick","reduceMineLeft","increaseMineLeft","recCheckCell","mat","checkCell","id","row","parseInt","col","tempMat","value","open","error","payload","buildBoard","size","lvl","amountOfMines","matrix","mineLeft","i","j","mine","mark","randomLine","Math","floor","random","randomCol","checkAndSetCloseToMine","length","console","log","gameTypes","resetSettings","loading","MineButton","props","dispatch","useDispatch","cell","className","aria-hidden","style","color","backgroundColor","useState","longpress","start","timer","state","setstate","onlongtouch","variant","onMouseUp","e","preventDefault","window","event","Date","getTime","which","board","onMouseDown","tempStart","tempTimer","setTimeout","onMouseLeave","clearTimeout","disabled","Board","useSelector","useEffect","boardTemplate","map","key","clicked","rightClicked","GameBtn","onClick","onclick","text","Settings","settings","setting","interval","pause","setInterval","clearInterval","time","parseFloat","toFixed","pauseFlag","Failed","App","gameOn","page","success","fail","checkPage","CircularProgress","isLoading","Boolean","location","hostname","match","initialState","boardReducer","tempBoard","collumn","tempCell","filter","obj","tempDoubleBoard","rowRIGHT","collumnRIGHT","tempCellRIGHT","newTime","reTime","restart","rootReducer","combineReducers","gameReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6393b4ea.chunk.js","sourcesContent":["export const boardTypes = {\n    //BOARD\n    BUILD: 'BUILD',\n    CLICKED: 'CLICKED',\n    RIGHT_CLICKED: \"RIGHT_CLICKED\",\n    REDUCE_MINE_LEFT: 'REDUCE_MINE_LEFT',\n    INCREASE_MINE_LEFT: 'INCREASE_MINE_LEFT',\n    CHECK_CELL: 'CHECK_CELL',\n    RESET: 'RESET',\n    EMPTY: 'EMPTY',\n\n    //GAME\n    TIME: 'TIME',\n    CHANGE_LEVEL: 'CHANGE_LEVEL',\n    CHANGE_SIZE: \"CHANGE_SIZE\",\n    RESTART_GAME: \"RESTART_GAME\",\n    PAUSE: 'PAUSE',\n    FAILED: 'FAILED',\n};\n\n","import { boardTypes } from './types';\n\n//------------------GENERAL CELL ACTIONS------------------------\nexport const cellClicked = (cellId) => {\n    const res = cellId.split(\"|\");\n\n    failed();\n    return {\n        type: boardTypes.CLICKED,\n        action: res\n    };\n};\nexport const cellRightClick = (cellId) => {\n    const res = cellId.split(\"|\");\n\n    return {\n        type: boardTypes.RIGHT_CLICKED,\n        action: res\n    }\n};\nexport const reduceMineLeft = () => {\n    return {\n        type: boardTypes.REDUCE_MINE_LEFT,\n\n    };\n};\nexport const increaseMineLeft = () => {\n    return {\n        type: boardTypes.INCREASE_MINE_LEFT,\n\n    };\n};\n\nexport const markCell = () => {\n    return {\n        type: boardTypes.DECREASE,\n    };\n};\n\nconst recCheckCell = (cellId, mat) => {\n    checkCell(cellId.id, mat)\n}\nexport const checkCell = (cellId, mat) => {\n    const res = cellId.split(\"|\");\n    const row = parseInt(res[0]), col = parseInt(res[1])\n    let tempMat = mat;\n    if (mat[res[0]][res[1]].value === 0) {\n        try {\n            if (!tempMat[row - 1][col].open) { // UP\n                tempMat[row - 1][col].open = true\n                if (tempMat[row - 1][col].value === 0) {\n                    recCheckCell(tempMat[row - 1][col], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row + 1][col].open) { // DOWN\n                tempMat[row + 1][col].open = true\n                if (tempMat[row + 1][col].value === 0) {\n                    recCheckCell(tempMat[row + 1][col], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row][col - 1].open) { //LEFT\n                tempMat[row][col - 1].open = true\n                if (tempMat[row][col - 1].value === 0) {\n                    recCheckCell(tempMat[row][col - 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row][col + 1].open) { //RIGHT\n                tempMat[row][col + 1].open = true\n                if (tempMat[row][col + 1].value === 0) {\n                    recCheckCell(tempMat[row][col + 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row - 1][col - 1].open) { //UP LEFT\n                tempMat[row - 1][col - 1].open = true\n                if (tempMat[row - 1][col - 1].value === 0) {\n                    recCheckCell(tempMat[row - 1][col - 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row - 1][col + 1].open) { //UP RIGHT\n                tempMat[row - 1][col + 1].open = true\n                if (tempMat[row - 1][col + 1].value === 0) {\n                    recCheckCell(tempMat[row - 1][col + 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row + 1][col + 1].open) { //DOWN RIGHT\n                tempMat[row + 1][col + 1].open = true\n                if (tempMat[row + 1][col + 1].value === 0) {\n                    recCheckCell(tempMat[row + 1][col + 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n        try {\n            if (!tempMat[row + 1][col - 1].open) { //DOWN LEFT\n                tempMat[row + 1][col - 1].open = true\n                if (tempMat[row + 1][col - 1].value === 0) {\n                    recCheckCell(tempMat[row + 1][col - 1], tempMat)\n                }\n            }\n        } catch (error) {\n            //out of board\n        }\n    }\n    else if (mat[res[0]][res[1]].value >= 15) {\n        return {\n            type: boardTypes.FAILED,\n        };\n    }\n\n\n    return {\n        type: boardTypes.CHECK_CELL,\n        payload: tempMat\n    };\n};\n\n//------------------BUILD------------------------\nexport const buildBoard = (size, lvl) => {\n    debugger\n    //lvl = easy : 20% mines , medium : 50% , hard :80%\n    // size = 9x9 , 5x5 , 12x12 , 20x20\n    const amountOfMines = lvl === 1 ? 0.15 * size * size : lvl === 2 ? 0.5 * size * size : 0.8 * size * size\n    let matrix = [], mineLeft = amountOfMines;\n\n    for (let i = 0; i < size; i++) {\n        matrix[i] = [];\n        for (let j = 0; j < size; j++) {\n            matrix[i][j] = { id: `${i}|${j}`, mine: false, open: false, value: 0, mark: 0 };\n        }\n    }\n    debugger\n    while (!(mineLeft <= 1)) {\n\n        debugger\n        let randomLine = Math.floor(Math.random() * size), randomCol = Math.floor(Math.random() * size)\n        if (!matrix[randomLine][randomCol].mine) { //if the cell is mine - find a new cell\n            matrix[randomLine][randomCol] = { id: `${randomLine}|${randomCol}`, mine: true, open: false, value: 15, mark: 0 };\n            mineLeft--\n        }\n    }\n\n    checkAndSetCloseToMine(matrix, size)\n    return {\n        type: boardTypes.BUILD,\n        action: matrix,\n        amountOfMines,\n    };\n};\n\nconst checkAndSetCloseToMine = (mat, size) => {\n    for (let i = 0; i < size; i++) {\n        for (let j = 0; j < size; j++) {\n            try {\n                if (mat[i][j].mine) {//incase mine detect\n                    if (i === 0) { // if first row\n                        if (j === 0) { // top left corner\n                            mat[i][j + 1].value += 1;\n                            mat[i + 1][j].value += 1;\n                            mat[i + 1][j + 1].value += 1;\n                        }\n                        else if (j === mat.length - 1) { // top right corner\n                            mat[i][j - 1].value += 1\n                            mat[i + 1][j].value += 1\n                            mat[i + 1][j - 1].value += 1\n                        }\n                        else {\n                            mat[i][j - 1].value += 1\n                            mat[i][j + 1].value += 1\n                            mat[i + 1][j].value += 1\n                            mat[i + 1][j - 1].value += 1\n                            mat[i + 1][j + 1].value += 1\n                        }\n                    }\n                    else if (i === mat.length - 1) { // if last row\n                        if (j === 0) { // buttom left corner\n                            mat[i][j + 1].value += 1;\n                            mat[i - 1][j].value += 1;\n                            mat[i - 1][j + 1].value += 1;\n                        }\n                        else if (j === mat.length - 1) {\n                            mat[i][j - 1].value += 1; // add 1 value to near by cell\n                            mat[i - 1][j].value += 1;\n                            mat[i - 1][j - 1].value += 1;\n                        }\n                        else {\n                            mat[i][j - 1].value += 1;\n                            mat[i][j + 1].value += 1;\n                            mat[i - 1][j].value += 1;\n                            mat[i - 1][j - 1].value += 1;\n                            mat[i - 1][j + 1].value += 1;\n                        }\n                    }\n                    else if (j === 0) { // left column\n                        mat[i - 1][j].value += 1\n                        mat[i + 1][j].value += 1\n                        mat[i][j + 1].value += 1\n                        mat[i - 1][j + 1].value += 1\n                        mat[i + 1][j + 1].value += 1\n                    }\n                    else if (j === mat.length - 1) { //right column\n                        mat[i - 1][j].value += 1\n                        mat[i + 1][j].value += 1\n                        mat[i][j - 1].value += 1\n                        mat[i - 1][j - 1].value += 1\n                        mat[i + 1][j - 1].value += 1\n                    }// middle matrix\n                    else {\n                        mat[i - 1][j + 1].value += 1\n                        mat[i - 1][j].value += 1\n                        mat[i - 1][j - 1].value += 1\n                        mat[i + 1][j + 1].value += 1\n                        mat[i + 1][j].value += 1\n                        mat[i + 1][j - 1].value += 1\n                        mat[i][j + 1].value += 1\n                        mat[i][j - 1].value += 1\n                    }\n                }\n            } catch (error) {\n                console.log(error, `row: ${i} , col: ${j}`, `object: ${mat[i][j - 1]}`)\n            }\n        }\n    }\n\n}\n\n//------------------GAME------------------------\n\nexport const time = () => {\n    return {\n        type: boardTypes.TIME,\n    };\n};\n\nexport const resetSettings = () => {\n    return {\n        type: boardTypes.RESTART_GAME,\n    };\n};\n\nexport const pause = (pauseFlag) => {\n    const pause = pauseFlag === 1 ? 0 : 1\n    return {\n        type: boardTypes.PAUSE,\n        payload: pause\n    };\n};\n\nexport const failed = () => {\n    return {\n        type: boardTypes.FAILED,\n    };\n};","export const gameTypes = {\n    //GAME\n    TIME: 'TIME',\n    CHANGE_LEVEL: 'CHANGE_LEVEL',\n    CHANGE_SIZE: \"CHANGE_SIZE\",\n    RESTART_GAME: \"RESTART_GAME\",\n    PAUSE: 'PAUSE',\n    LOADING: 'LOADING',\n}","import { gameTypes } from './types';\n\n\n//------------------GAME------------------------\n\nexport const time = () => {\n    return {\n        type: gameTypes.TIME,\n    };\n};\n\nexport const resetSettings = () => {\n    return {\n        type: gameTypes.RESTART_GAME,\n    };\n};\n\nexport const loading = () => {\n    return {\n        type: gameTypes.LOADING,\n    };\n};\n\n\nexport const pause = (pauseFlag) => {\n    const pause = pauseFlag === 1 ? 0 : 1\n    return {\n        type: gameTypes.PAUSE,\n        payload: pause\n    };\n};\n\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport {\n    cellClicked,\n    cellRightClick,\n    checkCell,\n    reduceMineLeft,\n    increaseMineLeft,\n} from '../../store/board/actions';\nconst MineButton = (props) => {\n    const dispatch = useDispatch();\n    const checkBtn = () => {\n        if (!props.cell.open) {\n            if (props.mark === 1) {\n                return <i className=\"fa fa-flag\" aria-hidden=\"true\"></i>\n            }\n            else if (props.mark === 2)\n                return <i className=\"fa fa-question\" aria-hidden=\"true\"></i>\n            else\n                return null\n\n        }\n        else {\n            if (props.cell.value >= 15)\n                return <i className=\"fa fa-bomb\" aria-hidden=\"true\"></i>;\n            else if (props.cell.value === 0) {\n                return null\n            }\n            else\n                return props.cell.value\n        }\n\n    }\n\n    const value = checkBtn()\n    const style = {\n        color: props.cell.value >= 15 && props.cell.open ? 'black' : props.cell.value === 1 && props.cell.open ? '#047933' : props.cell.value === 2 && props.cell.open ? '#0c0398' : props.cell.value === 3 && props.cell.open ? 'red' : !props.cell.open && props.cell.mark === 1 ? '#e50808' : !props.cell.open && props.cell.mark === 2 ? '#dbce23' : 'black',\n        backgroundColor: props.cell.mine && props.cell.open ? 'red' : props.cell.open ? \"#d1c8ffc9\" : (!props.cell.open && props.cell.mark === 1) || props.cell.mark === 2 ? '#484362' : '#998fd0',\n    }\n\n\n\n\n    const [state, setstate] = useState({ longpress: 250, start: 0, timer: null })\n    const onMouseDown = (e) => {\n        e = e || window.event;\n        let tempStart = new Date().getTime();\n\n        let tempTimer = setTimeout(onlongtouch, state.longpress);\n\n        setstate({ ...state, start: tempStart, timer: tempTimer })\n    }\n\n    const onMouseLeave = (e) => {\n        e = e || window.event;\n        //stops short touches from firing the event\n        if (state.timer)\n            clearTimeout(state.timer); // clearTimeout, not cleartimeout..\n        setstate({ ...state, start: 0, timer: null })\n    }\n\n    const onlongtouch = function () { };\n\n\n    const onMouseUp = (e) => {\n        e.preventDefault();\n        e = e || window.event;\n        debugger\n        if (new Date().getTime() >= (state.start + state.longpress)) {\n            dispatch(cellRightClick(props.cell.id));\n            if (props.cell.mark === 1)\n                dispatch(reduceMineLeft());\n            else if (props.cell.mark === 2) {\n                dispatch(increaseMineLeft());\n            }\n        } else {\n            switch (window.event.which) {\n                case 1: dispatch(cellClicked(props.cell.id));\n                    dispatch(checkCell(props.cell.id, props.board.board));\n                    break;\n\n                case 3: dispatch(cellRightClick(props.cell.id));\n                    if (props.cell.mark === 1)\n                        dispatch(reduceMineLeft());\n                    else if (props.cell.mark === 2) {\n                        dispatch(increaseMineLeft());\n                    }\n                    break;\n                default:\n                    return -1\n            }\n        }\n\n    }\n\n\n    return (\n\n        <button variant=\"contained\" onMouseUp={onMouseUp} onMouseDown={onMouseDown} onMouseLeave={onMouseLeave} disabled={props.cell.open} style={style}>{value}</button>\n\n    )\n}\n\nexport default MineButton\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    buildBoard,\n    cellClicked,\n    cellRightClick,\n    // resetCounter,\n} from '../../store/board/actions';\nimport {\n    loading\n    // resetCounter,\n} from '../../store/game/actions';\nimport MineButton from '../buttons/MineButton';\n\nconst Board = props => {\n\n    const board = useSelector(state => state.board);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(loading());\n        dispatch(buildBoard(board.size, 1));\n        dispatch(loading());\n\n        return () => null\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const boardTemplate = board.board.map((row, key) => {\n        return (\n            <div className=\"row\" key={key}>\n                {row.map((cell, key) =>\n                    <div className=\"cell\" key={key} id={cell.id}>\n                        <MineButton board={board} value={cell.value} mark={cell.mark} cell={cell} clicked={() => dispatch(cellClicked(cell.id))} rightClicked={() => dispatch(cellRightClick(cell.id))} />\n                    </div>\n                )}\n            </div>\n        )\n    })\n\n    return (\n        <div>\n\n            <div className=\"board\">\n                {boardTemplate}\n            </div>\n        </div>\n\n    );\n};\n\nexport default Board;\n","import React from 'react'\n\nconst GameBtn = (props) => {\n\n    return (\n        <button className=\"settingBtn\" onClick={props.onclick} >{props.text}</button>\n    )\n}\n\nexport default GameBtn\n","import React, { useEffect } from 'react'\nimport GamepadButton from '../buttons/GameBtn'\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    time,\n    loading,\n    pause,\n    resetSettings,\n} from '../../store/game/actions';\nimport {\n    buildBoard\n} from '../../store/board/actions';\nconst Settings = () => {\n    const settings = useSelector(state => state.setting);\n    const board = useSelector(state => state.board);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let interval = null;\n        if (!settings.pause)\n            interval = setInterval(() => {\n                dispatch(time());\n            }, 1000);\n        return () => clearInterval(interval);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [settings.pause])\n\n    const restartAll = () => {\n        dispatch(buildBoard(settings.size, settings.lvl));\n        dispatch(resetSettings())\n    }\n    return (\n        <div>\n            <div className=\"stats\" >\n                <div className=\"stats-time\">\n                    {settings.time}\n\n                </div>\n\n                <div className=\"stats-minesLeft\">\n                    {parseFloat(board.amountOfMines).toFixed(0)}\n                </div>\n            </div>\n            <GamepadButton text={'Pause'} onclick={() => dispatch(pause(settings.pause))} />\n            <GamepadButton text={'start over'} onclick={() => restartAll()} />\n            <GamepadButton text={'change level'} />\n        </div>\n    )\n}\n\nexport default Settings\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    time,\n    loading,\n    pause,\n    resetSettings,\n} from '../../store/game/actions';\nimport {\n    buildBoard, failed\n} from '../../store/board/actions';\nconst Failed = () => {\n    const settings = useSelector(state => state.setting);\n    const board = useSelector(state => state.board);\n    const dispatch = useDispatch();\n\n    const restartAll = () => {\n        dispatch(buildBoard(settings.size, settings.lvl));\n        dispatch(resetSettings())\n    }\n    return (\n        <div className=\"failed\">\n            <h2>YOU SUCK... AND DEAD!</h2>\n            <h3>game over! start over?</h3>\n            <button className=\"startOverBtn\" onClick={restartAll}>Play Again</button>\n        </div>\n    )\n}\n\nexport default Failed\n","import React, { useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './App.css';\nimport Board from './components/board/Board';\nimport Settings from './components/game/Settings'\nimport Failed from './components/screen/Failed'\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  time,\n  pause,\n  resetSettings,\n} from './store/game/actions';\nfunction App() {\n  const settings = useSelector(state => state.setting);\n  const board = useSelector(state => state.board);\n\n  const checkPage = () => {\n    let page = null\n    if (settings.pause === 1)\n      page = <div><Settings />PAUSED </div>\n\n    if (settings.pause === 0)\n      page = <div><Settings /> <Board /> </div>\n\n    if (settings.success === 1)\n      page = <div>success </div>\n\n    if (board.fail === 1)\n      page = <Failed />\n\n    return page\n  }\n\n  const gameOn = checkPage()\n\n  const loading = (\n    <div className='loading'>\n      <CircularProgress />\n    </div>\n  )\n  return (\n    <div className=\"App\">\n      {settings.isLoading ? loading : gameOn}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { boardTypes } from './types';\n\nconst initialState = {\n    board: [],\n    amountOfMines: 0,\n    lvl: 1,\n    size: 9,\n    fail: 0,\n    time: 0,\n    pause: 0,\n};\n\nconst boardReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        //------------------BUILD------------------------\n        case boardTypes.BUILD:\n            return {\n                ...state,\n                board: action.action,\n                amountOfMines: action.amountOfMines,\n                fail: 0\n            };\n\n        //------------------GENERAL ACTION------------------------\n\n        case boardTypes.CLICKED: // when player click LEFT CLICK on cell\n            let tempBoard = state.board\n            const row = action.action[0]\n            const collumn = action.action[1]\n            let tempCell = state.board[row].filter(obj => { // filter and get the specific cell\n                return obj.id === `${row}|${collumn}`\n            })\n            debugger\n            if (tempCell[0].mark !== 1) { // if the call is flag - dont change anything\n                tempCell[0].open = true\n                tempBoard[row][collumn] = { ...tempBoard[row][collumn], open: true }\n\n                return { ...state, board: tempBoard };\n            }\n            else\n                return { ...state };\n        case boardTypes.RIGHT_CLICKED: // when player click RIGHT CLICK on cell\n            let tempDoubleBoard = state.board\n            const rowRIGHT = action.action[0]\n            const collumnRIGHT = action.action[1]\n            let tempCellRIGHT = state.board[rowRIGHT].filter(obj => {\n                return obj.id === `${rowRIGHT}|${collumnRIGHT}`\n            })\n            tempCellRIGHT[0].mark += 1; // 0 = null , 1 = flag , 2 = question mark\n            if (tempCellRIGHT[0].mark > 2)\n                tempCellRIGHT[0].mark = 0;\n\n            tempDoubleBoard[rowRIGHT][collumnRIGHT] = { ...tempDoubleBoard[rowRIGHT][collumnRIGHT], mark: tempCellRIGHT[0].mark }\n\n            return { ...state, board: tempDoubleBoard };\n\n        case boardTypes.CHECK_CELL:\n            return { ...state, board: action.payload }\n\n        case boardTypes.REDUCE_MINE_LEFT:\n            return { ...state, amountOfMines: state.amountOfMines - 1 }\n\n        case boardTypes.INCREASE_MINE_LEFT:\n            return { ...state, amountOfMines: state.amountOfMines + 1 }\n\n\n        //------------------GAME------------------------\n\n        case boardTypes.TIME:\n            const newTime = state.time + 1\n            return { ...state, time: newTime }\n\n        case boardTypes.RESTART_GAME:\n            const reTime = 0\n            return { ...state, time: reTime }\n\n        case boardTypes.PAUSE:\n            const pause = action.payload\n            return { ...state, pause: pause }\n\n        case boardTypes.FAILED:\n            const failed = 1\n            debugger\n            return { ...state, fail: failed }\n\n\n\n        default:\n            return { ...state };\n    }\n\n};\n\nexport default boardReducer;\n","import { gameTypes } from './types';\n\nconst initialState = {\n    lvl: 1,\n    size: 9,\n    time: 0,\n    pause: 0,\n    restart: 0,\n    success: 0,\n    isLoading: 0,\n};\n\nconst boardReducer = (state = initialState, action) => {\n    switch (action.type) {\n        //------------------FLAGS------------------------\n\n        case gameTypes.LOADING:\n            const isLoading = !state.isLoading\n            return { ...state, isLoading: isLoading }\n        //------------------GAME------------------------\n\n        case gameTypes.TIME:\n            const newTime = state.time + 1\n            return {\n                ...state,\n                time: newTime\n            }\n\n        case gameTypes.RESTART_GAME:\n            return {\n                ...state,\n                time: 0,\n                pause: 0,\n                restart: 0,\n                success: 0,\n                isLoading: 0,\n            }\n\n        case gameTypes.PAUSE:\n            const pause = action.payload\n            return {\n                ...state,\n                pause: pause\n            }\n\n        default:\n            return { ...state };\n    }\n};\n\nexport default boardReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport boardReducer from './store/board/reducer';\nimport gameReducer from './store/game/reducer';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst rootReducer = combineReducers({\n  // posts: postsReducer,\n  setting: gameReducer,\n  board: boardReducer,\n});\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}